name: Check PR

on:
  # Triggers the workflow on every pull request to master branch
  push:
    branches: [ master, mahdi ]
  pull_request:
    branches: [ master, mahdi ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Load API Token from secrets
        env:
          API_TOKEN: ${{ secrets.TOKEN }}
        run: echo API_TOKEN=\"$API_TOKEN\" > ./local.properties

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}


      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
            java-version: 11
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Lint check Reports
        run: ./gradlew lint
        
      - name: Build App
        run: ./gradlew build
        
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace
         

#   test:
#     runs-on: macos-latest
#     needs: build
#     strategy:
#       matrix:
#         api-level: [21, 23, 29,30,31]
#         target: [default]

#     steps:
#       - name: Checkout the code
#         uses: actions/checkout@v2

#       - name: Load API Token from secrets
#         env:
#           API_TOKEN: ${{ secrets.API_OTKEN }}
#         run: echo API_TOKEN=\"$API_TOKEN\" > ./local.properties

#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11

#       - name: Run detekt
#         run: ./gradlew detektCheck

#       - name: Run unit tests
#         run: ./gradlew test --stacktrace
#       - name: checkout
#         uses: actions/checkout@v2

#       - name: run Instrumantation tests
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#           api-level: ${{ matrix.api-level }}
#           target: ${{ matrix.target }}
#           arch: x86_64
#           profile: Nexus 6
#           script: ./gradlew connectedCheck
          
#       - name: Upload Reports
#         uses: actions/upload-artifact@v2
#         with:
#           name: Test-Reports
#           path: app/build/reports/report.txt
#         if: always()
  release:
      runs-on: ubuntu-latest
#       needs: test
      steps:
        - uses: actions/checkout@v1
        - name: set up JDK 1.8
          uses: actions/setup-java@v1
          with:
              java-version: 1.8

        - name: Grant rights
          run: chmod +x ./gradlew

        - name: Build project with Gradle
          run: ./gradlew build

        - name: Build Release APK with Gradle
          run: ./gradlew assembleRelease
        - name: Sign Android App
          id: sign-android-app
          uses: r0adkll/sign-android-release@v1
          with:
               releaseDirectory: ./android/app/build/outputs/apk/release/
               signingKeyBase64: ${{ secrets.SIGNING_KEY }}
               alias: ${{ secrets.ALIAS }}
               keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        - name: Other Step that accepts file as an input and uploads it somewhere
          with:
               file: ${{ steps.sign-android-app.outputs.signedReleaseFile }}

        - uses: actions/upload-artifact@v2
          with:
               name: Signed app bundle
               path: ${{steps.sign_app.outputs.signedReleaseFile}}

        - name: send custom message
          uses: appleboy/telegram-action@master
          with:
               to: ${{ secrets.CHAT_ID }}
               token: ${{ secrets.BOT_TOKEN }}
               message: Upload Apk to telegram not just aircraft
               document: ${{steps.sign_app.outputs.signedReleaseFile}}
    
